1. TABLE NAME :- users """ create table public.users (
  id uuid not null default auth.uid (),
  profile_picture_url text null,
  name character varying null,
  bio character varying null,
  location text null,
  created_at timestamp with time zone not null default now(),
  updated_at timestamp with time zone not null default now(),
  email text not null,
  username text null,
  constraint users_pkey primary key (id),
  constraint users_email_key unique (email),
  constraint users_username_key unique (username)
) TABLESPACE pg_default;""

2.table name is :-sources "" create table public.sources (
  id uuid not null default gen_random_uuid (),
  bucket_id uuid not null default gen_random_uuid (),
  created_at timestamp with time zone not null default now(),
  updated_at timestamp with time zone not null default now(),
  source_message text null,
  user_id uuid not null default gen_random_uuid (),
  source_url text null,
  scraped_content text null,
  status text null,
  constraint sources_pkey primary key (id),
  constraint sources_bucket_id_fkey foreign KEY (bucket_id) references buckets (id),
  constraint sources_user_id_fkey foreign KEY (user_id) references users (id)
) TABLESPACE pg_default;

create trigger after_source_insert
after INSERT on sources for EACH row
execute FUNCTION handle_new_source ();""

3. table name is :- buckets """ create table public.buckets (
  id uuid not null default gen_random_uuid (),
  name text not null,
  prompt text null,
  created_at timestamp with time zone not null default now(),
  updated_at timestamp with time zone not null default now(),
  bio text not null,
  character_name text not null,
  "isPublic" boolean not null default false,
  shakty_dp text null,
  created_by uuid not null default gen_random_uuid (),
  by_shakty boolean not null default false,
  share_id text null,
  constraint buckets_pkey primary key (id),
  constraint buckets_share_id_key unique (share_id),
  constraint buckets_created_by_fkey foreign KEY (created_by) references users (id)
) TABLESPACE pg_default;""

4. another table name is :- chat_messages "" create table public.chat_messages (
  id uuid not null default gen_random_uuid (),
  session_id uuid null,
  sender character varying(50) not null,
  message text not null,
  created_at timestamp with time zone null default now(),
  constraint chat_messages_pkey primary key (id),
  constraint chat_messages_session_id_fkey foreign KEY (session_id) references chat_sessions (id) on delete CASCADE,
  constraint chat_messages_sender_check check (
    (
      (sender)::text = any (
        array[
          ('user'::character varying)::text,
          ('llm'::character varying)::text
        ]
      )
    )
  )
) TABLESPACE pg_default;""

5. another table name is :- chat_sessions ""create table public.chat_sessions (
  id uuid not null default gen_random_uuid (),
  user_id uuid not null default gen_random_uuid (),
  topic text not null,
  created_at timestamp with time zone not null default now(),
  bucket_id uuid not null default gen_random_uuid (),
  constraint chat_sessions_pkey primary key (id),
  constraint chat_sessions_bucket_id_fkey foreign KEY (bucket_id) references buckets (id),
  constraint chat_sessions_user_id_fkey foreign KEY (user_id) references users (id) on delete CASCADE
) TABLESPACE pg_default;""

6. another table name is :- chatbot_system_prompt :- create table public.chatbot_system_prompt (
  id uuid not null default extensions.uuid_generate_v4 (),
  prompt text not null,
  created_at timestamp without time zone null default now(),
  updated_at timestamp without time zone null default now(),
  constraint chatbot_system_prompt_pkey primary key (id)
) TABLESPACE pg_default;"


so it is all the sql queires and table names , now if yoiu see anything muist be updated so please do it so we can properly connect with the database @Rest_apis.py @test_shakty_api.py 